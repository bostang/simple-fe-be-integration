services:
  postgres_main:
    image: postgres:17
    container_name: db_main
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: user_db
    volumes:
      - ./DB_initialization.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  postgres_validator:
    image: postgres:17
    container_name: db_validator
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: nik_db
    volumes:
      - ./DB_validator_initialization.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./be
    container_name: backend
    depends_on:
      postgres_main:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_main:5432/user_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8083:8083"

  external_validator:
    build:
      context: ./eksternal_dukcapil
    container_name: external_validator
    depends_on:
      postgres_validator:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db_validator:5432/nik_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8082:8082"

  frontend:
    build:
      context: ./fe
    container_name: frontend
    depends_on:
      - backend
      - external_validator
    ports:
    - "3000:80"   # nginx secara default akan mendengarkan pada port 80, bukan 3000
      # - "3000:3000"
